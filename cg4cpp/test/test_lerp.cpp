
#include <Cg/half.hpp>
#include <Cg/double.hpp>
#include <Cg/vector/xyzw.hpp>
#include <Cg/vector.hpp>
#include <Cg/iostream.hpp>
#include <Cg/dot.hpp>
#include <Cg/lerp.hpp>

using namespace Cg;

#define OUTPUT(_x) std::cout << #_x << "=" << (_x) << std::endl

void test_lerp()
{
  float scalarf = 0.2f;
  float scalari = 1;
  half scalarh = half(0.42);
  float4 foo = float4(0.1f,0.2f,0.3f,0.4f);
  half4 fooh = half4(0.1f,0.2f,0.3f,0.4f);

  OUTPUT(lerp(foo,foo,foo));
  OUTPUT(lerp(fooh,fooh,fooh));
#ifndef _MSC_VER
  OUTPUT(lerp(foo,foo,fooh));
  OUTPUT(lerp(foo,fooh,foo));
  OUTPUT(lerp(fooh,foo,foo));
  OUTPUT(lerp(4,fooh,0.95));
  OUTPUT(lerp(4,fooh.x,0.95));
  OUTPUT(lerp(4,fooh.xy,0.95));

  OUTPUT(lerp(0.85,foo,foo.x));
  OUTPUT(lerp(foo,0.95,foo.x));
  OUTPUT(lerp(0.85,foo.x,foo));
  OUTPUT(lerp(foo,foo.x,0.95));
  OUTPUT(lerp(0.85,foo,foo.x));
  OUTPUT(lerp(foo,0.95,foo.x));

  OUTPUT(lerp(0.85,foo.zzw,foo.x));
  OUTPUT(lerp(foo.zzw,0.95,foo.x));
  OUTPUT(lerp(0.85,foo.x,foo.zzw));
  OUTPUT(lerp(foo.zzw,foo.x,0.95));
  OUTPUT(lerp(0.85,foo.zzw,foo.x));
  OUTPUT(lerp(foo.zzw,0.95,foo.x));

  OUTPUT(lerp(foo,foo.x,foo));
  OUTPUT(lerp(foo.x,foo,foo.x));

  OUTPUT(lerp(foo.x,foo.x,foo.x));

  OUTPUT(lerp(4,0.95,fooh.xy));
  OUTPUT(lerp(foo,foo,foo.x));
  OUTPUT(lerp(foo,foo.x,foo.x));
  OUTPUT(lerp(foo.x,foo,foo));
  OUTPUT(lerp(foo.x,foo.x,foo));
  OUTPUT(lerp(foo,foo,foo.x));
  OUTPUT(lerp(foo,foo,fooh.x));
  OUTPUT(lerp(foo.xxy,foo.zzx,foo.x));
  OUTPUT(lerp(foo,0.95,foo));
  OUTPUT(lerp(foo,foo.x,foo.x));
  OUTPUT(lerp(foo,foo.wzxy,foo.x));
  OUTPUT(lerp(foo,0.95,foo));
  OUTPUT(lerp(foo,0.95,foo.wzxy));
  OUTPUT(lerp(foo,0.95,0.95));
  OUTPUT(lerp(foo,0.95,0.55f));
  OUTPUT(lerp(foo,0.95,0.9));
  OUTPUT(lerp(foo,0.95,scalarf));
  OUTPUT(lerp(foo,0.95,scalari));
  OUTPUT(lerp(foo,0.95,scalarh));
  OUTPUT(lerp(foo,0.55f,foo));
  OUTPUT(lerp(foo,0.55f,foo.wzxy));
  OUTPUT(lerp(foo,0.55f,0.95));
  OUTPUT(lerp(foo,0.55f,0.55f));
  OUTPUT(lerp(foo,0.55f,0.9));
  OUTPUT(lerp(foo,0.55f,scalarf));
  OUTPUT(lerp(foo,0.55f,scalari));
  OUTPUT(lerp(foo,0.55f,scalarh));
  OUTPUT(lerp(foo,0.9,foo));
  OUTPUT(lerp(foo,0.9,foo.wzxy));
  OUTPUT(lerp(foo,0.9,0.95));
  OUTPUT(lerp(foo,0.9,0.55f));
  OUTPUT(lerp(foo,0.9,0.9));
  OUTPUT(lerp(foo,0.9,scalarf));
  OUTPUT(lerp(foo,0.9,scalari));
  OUTPUT(lerp(foo,0.9,scalarh));
  OUTPUT(lerp(foo,scalarf,foo));
  OUTPUT(lerp(foo,scalarf,foo.wzxy));
  OUTPUT(lerp(foo,scalarf,0.95));
  OUTPUT(lerp(foo,scalarf,0.55f));
  OUTPUT(lerp(foo,scalarf,0.9));
  OUTPUT(lerp(foo,scalarf,scalarf));
  OUTPUT(lerp(foo,scalarf,scalari));
  OUTPUT(lerp(foo,scalarf,scalarh));
  OUTPUT(lerp(foo,scalari,foo));
  OUTPUT(lerp(foo,scalari,foo.wzxy));
  OUTPUT(lerp(foo,scalari,0.95));
  OUTPUT(lerp(foo,scalari,0.55f));
  OUTPUT(lerp(foo,scalari,0.9));
  OUTPUT(lerp(foo,scalari,scalarf));
  OUTPUT(lerp(foo,scalari,scalari));
  OUTPUT(lerp(foo,scalari,scalarh));
  OUTPUT(lerp(foo,scalarh,foo));
  OUTPUT(lerp(foo,foo,foo.xyzw));
  OUTPUT(lerp(foo,foo,scalarf));
  OUTPUT(lerp(foo,foo,5.0f));
  OUTPUT(lerp(foo,foo,0.55f));
  OUTPUT(lerp(foo,foo,0.9));
  OUTPUT(lerp(foo,foo,scalarf));
  OUTPUT(lerp(foo,foo,scalari));
  OUTPUT(lerp(foo,foo,scalarh));
  OUTPUT(lerp(foo,foo.x,foo));
  OUTPUT(lerp(foo,foo.x,foo.wzxy));
  OUTPUT(lerp(foo,foo.x,0.95));
  OUTPUT(lerp(foo,foo.x,0.55f));
  OUTPUT(lerp(foo,foo.x,0.9));
  OUTPUT(lerp(foo,foo.x,scalarf));
  OUTPUT(lerp(foo,foo.x,scalari));
  OUTPUT(lerp(foo,foo.x,scalarh));
  OUTPUT(lerp(foo,foo.wzxy,foo));
  OUTPUT(lerp(foo,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(foo,foo.wzxy,0.95));
  OUTPUT(lerp(foo,foo.wzxy,0.55f));
  OUTPUT(lerp(foo,foo.wzxy,0.9));
  OUTPUT(lerp(foo,foo.wzxy,scalarf));
  OUTPUT(lerp(foo,foo.wzxy,scalari));
  OUTPUT(lerp(foo,foo.wzxy,scalarh));
  OUTPUT(lerp(foo,0.95,foo.x));
  OUTPUT(lerp(foo,0.55f,foo.x));
  OUTPUT(lerp(foo,0.9,foo.x));
  OUTPUT(lerp(foo,scalarf,foo.x));
  OUTPUT(lerp(foo,scalari,foo.x));
  OUTPUT(lerp(foo,scalarh,foo.x));
  OUTPUT(lerp(foo,scalarh,foo.wzxy));
  OUTPUT(lerp(foo,scalarh,0.95));
  OUTPUT(lerp(foo,scalarh,0.55f));
  OUTPUT(lerp(foo,scalarh,0.9));
  OUTPUT(lerp(foo,scalarh,scalarf));
  OUTPUT(lerp(foo,scalarh,scalari));
  OUTPUT(lerp(foo,scalarh,scalarh));
  OUTPUT(lerp(foo.x,foo,foo));
  OUTPUT(lerp(foo.x,foo,foo.x));
  OUTPUT(lerp(foo.x,foo,foo.wzxy));
  OUTPUT(lerp(foo.x,foo,0.95));
  OUTPUT(lerp(foo.x,foo,0.55f));
  OUTPUT(lerp(foo.x,foo,0.9));
  OUTPUT(lerp(foo.x,foo,scalarf));
  OUTPUT(lerp(foo.x,foo,scalari));
  OUTPUT(lerp(foo.x,foo,scalarh));
  OUTPUT(lerp(foo.x,foo.x,foo));
  OUTPUT(lerp(float1(foo.x),foo.x,foo.x)); // ambigugous
  OUTPUT(lerp(foo.x,foo.x,foo.wzxy));
  OUTPUT(lerp(float1(foo.x),foo.x,0.95)); // ambigugous
  OUTPUT(lerp(foo.x,float1(foo.x),0.55f)); // ambigugous
  OUTPUT(lerp(foo.x,foo.x,float1(0.9f)));  // ambigugous
  OUTPUT(lerp(foo.x,float1(foo.x),scalarf));
  OUTPUT(lerp(foo.x,float1(foo.x),scalari));
  OUTPUT(lerp(foo.x,float1(foo.x),scalarh));
  OUTPUT(lerp(foo.x,foo.wzxy,foo));
  OUTPUT(lerp(foo.x,foo.wzxy,foo.x));
  OUTPUT(lerp(foo.x,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(foo.x,foo.wzxy,0.95));
  OUTPUT(lerp(foo.x,foo.wzxy,0.55f));
  OUTPUT(lerp(foo.x,foo.wzxy,0.9));
  OUTPUT(lerp(foo.x,foo.wzxy,scalarf));
  OUTPUT(lerp(foo.x,foo.wzxy,scalari));
  OUTPUT(lerp(foo.x,foo.wzxy,scalarh));
  OUTPUT(lerp(foo.x,0.95,foo));
  OUTPUT(lerp(foo.x,0.95,float1(foo.x)));
  OUTPUT(lerp(foo.x,0.95,foo.wzxy));
  OUTPUT(lerp(float1(foo.x),0.95,0.95));
  OUTPUT(lerp(float1(foo.x),0.95,0.55f));
  OUTPUT(lerp(foo.x,float1(5),0.9));
  OUTPUT(lerp(foo.x,float1(5),scalarf));
  OUTPUT(lerp(foo.x,float1(5),scalari));
  OUTPUT(lerp(foo.x,0.95,float1(scalarh)));
  OUTPUT(lerp(foo.x,0.55f,foo));
  OUTPUT(lerp(float1(foo.x),0.55f,foo.x));
  OUTPUT(lerp(foo.x,0.55f,foo.wzxy));
  OUTPUT(lerp(float1(foo.x),0.55f,0.95));
  OUTPUT(lerp(float1(foo.x),0.55f,0.55f));
  OUTPUT(lerp(float1(foo.x),0.55f,0.9));
  OUTPUT(lerp(float1(foo.x),0.55f,scalarf));
  OUTPUT(lerp(foo.x,0.55f,float1(scalari)));
  OUTPUT(lerp(foo.x,0.55f,float1(scalarh)));
  OUTPUT(lerp(foo.x,0.9,foo));
  OUTPUT(lerp(foo.x,0.9,foo.x));
  OUTPUT(lerp(foo.x,0.9,foo.wzxy));
  OUTPUT(lerp(foo.x,0.9,0.95));
  OUTPUT(lerp(foo.x,0.9,0.55f));
  OUTPUT(lerp(foo.x,0.9,0.9));
  OUTPUT(lerp(foo.x,0.9,scalarf));
  OUTPUT(lerp(foo.x,0.9,scalari));
  OUTPUT(lerp(foo.x,0.9,scalarh));
  OUTPUT(lerp(foo.x,scalarf,foo));
  OUTPUT(lerp(foo.x,scalarf,foo.x));
  OUTPUT(lerp(foo.x,scalarf,foo.wzxy));
  OUTPUT(lerp(foo.x,scalarf,0.95));
  OUTPUT(lerp(foo.x,scalarf,0.55f));
  OUTPUT(lerp(foo.x,scalarf,0.9));
  OUTPUT(lerp(foo.x,scalarf,scalarf));
  OUTPUT(lerp(foo.x,scalarf,scalari));
  OUTPUT(lerp(foo.x,scalarf,scalarh));
  OUTPUT(lerp(foo.x,scalari,foo));
  OUTPUT(lerp(foo.x,scalari,foo.x));
  OUTPUT(lerp(foo.x,scalari,foo.wzxy));
  OUTPUT(lerp(foo.x,scalari,0.95));
  OUTPUT(lerp(foo.x,scalari,0.55f));
  OUTPUT(lerp(foo.x,scalari,0.9));
  OUTPUT(lerp(foo.x,scalari,scalarf));
  OUTPUT(lerp(foo.x,scalari,scalari));
  OUTPUT(lerp(foo.x,scalari,scalarh));
  OUTPUT(lerp(foo.x,scalarh,foo));
  OUTPUT(lerp(foo.x,scalarh,foo.x));
  OUTPUT(lerp(foo.x,scalarh,foo.wzxy));
  OUTPUT(lerp(foo.x,scalarh,0.95));
  OUTPUT(lerp(foo.x,scalarh,0.55f));
  OUTPUT(lerp(foo.x,scalarh,0.9));
  OUTPUT(lerp(foo.x,scalarh,scalarf));
  OUTPUT(lerp(foo.x,scalarh,scalari));
  OUTPUT(lerp(foo.x,scalarh,scalarh));
  OUTPUT(lerp(foo.wzxy,foo,foo));
  OUTPUT(lerp(foo.wzxy,foo,foo.x));
  OUTPUT(lerp(foo.wzxy,foo,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,foo,0.95));
  OUTPUT(lerp(foo.wzxy,foo,0.55f));
  OUTPUT(lerp(foo.wzxy,foo,0.9));
  OUTPUT(lerp(foo.wzxy,foo,scalarf));
  OUTPUT(lerp(foo.wzxy,foo,scalari));
  OUTPUT(lerp(foo.wzxy,foo,scalarh));
  OUTPUT(lerp(foo.wzxy,foo.x,foo));
  OUTPUT(lerp(foo.wzxy,foo.x,foo.x));
  OUTPUT(lerp(foo.wzxy,foo.x,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,foo.x,0.95));
  OUTPUT(lerp(foo.wzxy,foo.x,0.55f));
  OUTPUT(lerp(foo.wzxy,foo.x,0.9));
  OUTPUT(lerp(foo.wzxy,foo.x,scalarf));
  OUTPUT(lerp(foo.wzxy,foo.x,scalari));
  OUTPUT(lerp(foo.wzxy,foo.x,scalarh));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,foo));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,foo.x));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,0.95));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,0.55f));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,0.9));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,scalarf));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,scalari));
  OUTPUT(lerp(foo.wzxy,foo.wzxy,scalarh));
  OUTPUT(lerp(foo.wzxy,0.95,foo));
  OUTPUT(lerp(foo.wzxy,0.95,foo.x));
  OUTPUT(lerp(foo.wzxy,0.95,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,0.95,0.95));
  OUTPUT(lerp(foo.wzxy,0.95,0.55f));
  OUTPUT(lerp(foo.wzxy,0.95,0.9));
  OUTPUT(lerp(foo.wzxy,0.95,scalarf));
  OUTPUT(lerp(foo.wzxy,0.95,scalari));
  OUTPUT(lerp(foo.wzxy,0.95,scalarh));
  OUTPUT(lerp(foo.wzxy,0.55f,foo));
  OUTPUT(lerp(foo.wzxy,0.55f,foo.x));
  OUTPUT(lerp(foo.wzxy,0.55f,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,0.55f,0.95));
  OUTPUT(lerp(foo.wzxy,0.55f,0.55f));
  OUTPUT(lerp(foo.wzxy,0.55f,0.9));
  OUTPUT(lerp(foo.wzxy,0.55f,scalarf));
  OUTPUT(lerp(foo.wzxy,0.55f,scalari));
  OUTPUT(lerp(foo.wzxy,0.55f,scalarh));
  OUTPUT(lerp(foo.wzxy,0.9,foo));
  OUTPUT(lerp(foo.wzxy,0.9,foo.x));
  OUTPUT(lerp(foo.wzxy,0.9,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,0.9,0.95));
  OUTPUT(lerp(foo.wzxy,0.9,0.55f));
  OUTPUT(lerp(foo.wzxy,0.9,0.9));
  OUTPUT(lerp(foo.wzxy,0.9,scalarf));
  OUTPUT(lerp(foo.wzxy,0.9,scalari));
  OUTPUT(lerp(foo.wzxy,0.9,scalarh));
  OUTPUT(lerp(foo.wzxy,scalarf,foo));
  OUTPUT(lerp(foo.wzxy,scalarf,foo.x));
  OUTPUT(lerp(foo.wzxy,scalarf,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,scalarf,0.95));
  OUTPUT(lerp(foo.wzxy,scalarf,0.55f));
  OUTPUT(lerp(foo.wzxy,scalarf,0.9));
  OUTPUT(lerp(foo.wzxy,scalarf,scalarf));
  OUTPUT(lerp(foo.wzxy,scalarf,scalari));
  OUTPUT(lerp(foo.wzxy,scalarf,scalarh));
  OUTPUT(lerp(foo.wzxy,scalari,foo));
  OUTPUT(lerp(foo.wzxy,scalari,foo.x));
  OUTPUT(lerp(foo.wzxy,scalari,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,scalari,0.95));
  OUTPUT(lerp(foo.wzxy,scalari,0.55f));
  OUTPUT(lerp(foo.wzxy,scalari,0.9));
  OUTPUT(lerp(foo.wzxy,scalari,scalarf));
  OUTPUT(lerp(foo.wzxy,scalari,scalari));
  OUTPUT(lerp(foo.wzxy,scalari,scalarh));
  OUTPUT(lerp(foo.wzxy,scalarh,foo));
  OUTPUT(lerp(foo.wzxy,scalarh,foo.x));
  OUTPUT(lerp(foo.wzxy,scalarh,foo.wzxy));
  OUTPUT(lerp(foo.wzxy,scalarh,0.95));
  OUTPUT(lerp(foo.wzxy,scalarh,0.55f));
  OUTPUT(lerp(foo.wzxy,scalarh,0.9));
  OUTPUT(lerp(foo.wzxy,scalarh,scalarf));
  OUTPUT(lerp(foo.wzxy,scalarh,scalari));
  OUTPUT(lerp(foo.wzxy,scalarh,scalarh));
  OUTPUT(lerp(0.85,foo,foo));
  OUTPUT(lerp(0.85,foo,foo.x));
  OUTPUT(lerp(0.85,foo,foo.wzxy));
  OUTPUT(lerp(0.85,foo,0.95));
  OUTPUT(lerp(0.85,foo,0.55f));
  OUTPUT(lerp(0.85,foo,0.9));
  OUTPUT(lerp(0.85,foo,scalarf));
  OUTPUT(lerp(0.85,foo,scalari));
  OUTPUT(lerp(0.85,foo,scalarh));
  OUTPUT(lerp(0.85,foo.x,foo));
  OUTPUT(lerp(0.85,foo.x,foo.x));
  OUTPUT(lerp(0.85,foo.x,foo.wzxy));
  OUTPUT(lerp(0.85,foo.x,0.95));
  OUTPUT(lerp(0.85,foo.x,0.55f));
  OUTPUT(lerp(0.85,foo.x,0.9));
  OUTPUT(lerp(0.85,foo.x,scalarf));
  OUTPUT(lerp(0.85,foo.x,scalari));
  OUTPUT(lerp(0.85,foo.x,scalarh));
  OUTPUT(lerp(0.85,foo.wzxy,foo));
  OUTPUT(lerp(0.85,foo.wzxy,foo.x));
  OUTPUT(lerp(0.85,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(0.85,foo.wzxy,0.95));
  OUTPUT(lerp(0.85,foo.wzxy,0.55f));
  OUTPUT(lerp(0.85,foo.wzxy,0.9));
  OUTPUT(lerp(0.85,foo.wzxy,scalarf));
  OUTPUT(lerp(0.85,foo.wzxy,scalari));
  OUTPUT(lerp(0.85,foo.wzxy,scalarh));
  OUTPUT(lerp(0.85,0.95,foo));
  OUTPUT(lerp(0.85,0.95,foo.x));
  OUTPUT(lerp(0.85,0.95,foo.wzxy));
  OUTPUT(lerp(0.85,0.95,0.95));
  OUTPUT(lerp(0.85,0.95,0.55f));
  OUTPUT(lerp(0.85,0.95,0.9));
  OUTPUT(lerp(0.85,0.95,scalarf));
  OUTPUT(lerp(0.85,0.95,scalari));
  OUTPUT(lerp(0.85,0.95,scalarh));
  OUTPUT(lerp(0.85,0.55f,foo));
  OUTPUT(lerp(0.85,0.55f,foo.x));
  OUTPUT(lerp(0.85,0.55f,foo.wzxy));
  OUTPUT(lerp(0.85,0.55f,0.95));
  OUTPUT(lerp(0.85,0.55f,0.55f));
  OUTPUT(lerp(0.85,0.55f,0.9));
  OUTPUT(lerp(0.85,0.55f,scalarf));
  OUTPUT(lerp(0.85,0.55f,scalari));
  OUTPUT(lerp(0.85,0.55f,scalarh));
  OUTPUT(lerp(0.85,0.9,foo));
  OUTPUT(lerp(0.85,0.9,foo.x));
  OUTPUT(lerp(0.85,0.9,foo.wzxy));
  OUTPUT(lerp(0.85,0.9,0.95));
  OUTPUT(lerp(0.85,0.9,0.55f));
  OUTPUT(lerp(0.85,0.9,0.9));
  OUTPUT(lerp(0.85,0.9,scalarf));
  OUTPUT(lerp(0.85,0.9,scalari));
  OUTPUT(lerp(0.85,0.9,scalarh));
  OUTPUT(lerp(0.85,scalarf,foo));
  OUTPUT(lerp(0.85,scalarf,foo.x));
  OUTPUT(lerp(0.85,scalarf,foo.wzxy));
  OUTPUT(lerp(0.85,scalarf,0.95));
  OUTPUT(lerp(0.85,scalarf,0.55f));
  OUTPUT(lerp(0.85,scalarf,0.9));
  OUTPUT(lerp(0.85,scalarf,scalarf));
  OUTPUT(lerp(0.85,scalarf,scalari));
  OUTPUT(lerp(0.85,scalarf,scalarh));
  OUTPUT(lerp(0.85,scalari,foo));
  OUTPUT(lerp(0.85,scalari,foo.x));
  OUTPUT(lerp(0.85,scalari,foo.wzxy));
  OUTPUT(lerp(0.85,scalari,0.95));
  OUTPUT(lerp(0.85,scalari,0.55f));
  OUTPUT(lerp(0.85,scalari,0.9));
  OUTPUT(lerp(0.85,scalari,scalarf));
  OUTPUT(lerp(0.85,scalari,scalari));
  OUTPUT(lerp(0.85,scalari,scalarh));
  OUTPUT(lerp(0.85,scalarh,foo));
  OUTPUT(lerp(0.85,scalarh,foo.x));
  OUTPUT(lerp(0.85,scalarh,foo.wzxy));
  OUTPUT(lerp(0.85,scalarh,0.95));
  OUTPUT(lerp(0.85,scalarh,0.55f));
  OUTPUT(lerp(0.85,scalarh,0.9));
  OUTPUT(lerp(0.85,scalarh,scalarf));
  OUTPUT(lerp(0.85,scalarh,scalari));
  OUTPUT(lerp(0.85,scalarh,scalarh));
  OUTPUT(lerp(0.55f,foo,foo));
  OUTPUT(lerp(0.55f,foo,foo.x));
  OUTPUT(lerp(0.55f,foo,foo.wzxy));
  OUTPUT(lerp(0.55f,foo,0.95));
  OUTPUT(lerp(0.55f,foo,0.55f));
  OUTPUT(lerp(0.55f,foo,0.9));
  OUTPUT(lerp(0.55f,foo,scalarf));
  OUTPUT(lerp(0.55f,foo,scalari));
  OUTPUT(lerp(0.55f,foo,scalarh));
  OUTPUT(lerp(0.55f,foo.x,foo));
  OUTPUT(lerp(0.55f,foo.x,foo.x));
  OUTPUT(lerp(0.55f,foo.x,foo.wzxy));
  OUTPUT(lerp(0.55f,foo.x,0.95));
  OUTPUT(lerp(0.55f,foo.x,0.55f));
  OUTPUT(lerp(0.55f,foo.x,0.9));
  OUTPUT(lerp(0.55f,foo.x,scalarf));
  OUTPUT(lerp(0.55f,foo.x,scalari));
  OUTPUT(lerp(0.55f,foo.x,scalarh));
  OUTPUT(lerp(0.55f,foo.wzxy,foo));
  OUTPUT(lerp(0.55f,foo.wzxy,foo.x));
  OUTPUT(lerp(0.55f,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(0.55f,foo.wzxy,0.95));
  OUTPUT(lerp(0.55f,foo.wzxy,0.55f));
  OUTPUT(lerp(0.55f,foo.wzxy,0.9));
  OUTPUT(lerp(0.55f,foo.wzxy,scalarf));
  OUTPUT(lerp(0.55f,foo.wzxy,scalari));
  OUTPUT(lerp(0.55f,foo.wzxy,scalarh));
  OUTPUT(lerp(0.55f,0.95,foo));
  OUTPUT(lerp(0.55f,0.95,foo.x));
  OUTPUT(lerp(0.55f,0.95,foo.wzxy));
  OUTPUT(lerp(0.55f,0.95,0.95));
  OUTPUT(lerp(0.55f,0.95,0.55f));
  OUTPUT(lerp(0.55f,0.95,0.9));
  OUTPUT(lerp(0.55f,0.95,scalarf));
  OUTPUT(lerp(0.55f,0.95,scalari));
  OUTPUT(lerp(0.55f,0.95,scalarh));
  OUTPUT(lerp(0.55f,0.55f,foo));
  OUTPUT(lerp(0.55f,0.55f,foo.x));
  OUTPUT(lerp(0.55f,0.55f,foo.wzxy));
  OUTPUT(lerp(0.55f,0.55f,0.95));
  OUTPUT(lerp(0.55f,0.55f,0.55f));
  OUTPUT(lerp(0.55f,0.55f,0.9));
  OUTPUT(lerp(0.55f,0.55f,scalarf));
  OUTPUT(lerp(0.55f,0.55f,scalari));
  OUTPUT(lerp(0.55f,0.55f,scalarh));
  OUTPUT(lerp(0.55f,0.9,foo));
  OUTPUT(lerp(0.55f,0.9,foo.x));
  OUTPUT(lerp(0.55f,0.9,foo.wzxy));
  OUTPUT(lerp(0.55f,0.9,0.95));
  OUTPUT(lerp(0.55f,0.9,0.55f));
  OUTPUT(lerp(0.55f,0.9,0.9));
  OUTPUT(lerp(0.55f,0.9,scalarf));
  OUTPUT(lerp(0.55f,0.9,scalari));
  OUTPUT(lerp(0.55f,0.9,scalarh));
  OUTPUT(lerp(0.55f,scalarf,foo));
  OUTPUT(lerp(0.55f,scalarf,foo.x));
  OUTPUT(lerp(0.55f,scalarf,foo.wzxy));
  OUTPUT(lerp(0.55f,scalarf,0.95));
  OUTPUT(lerp(0.55f,scalarf,0.55f));
  OUTPUT(lerp(0.55f,scalarf,0.9));
  OUTPUT(lerp(0.55f,scalarf,scalarf));
  OUTPUT(lerp(0.55f,scalarf,scalari));
  OUTPUT(lerp(0.55f,scalarf,scalarh));
  OUTPUT(lerp(0.55f,scalari,foo));
  OUTPUT(lerp(0.55f,scalari,foo.x));
  OUTPUT(lerp(0.55f,scalari,foo.wzxy));
  OUTPUT(lerp(0.55f,scalari,0.95));
  OUTPUT(lerp(0.55f,scalari,0.55f));
  OUTPUT(lerp(0.55f,scalari,0.9));
  OUTPUT(lerp(0.55f,scalari,scalarf));
  OUTPUT(lerp(0.55f,scalari,scalari));
  OUTPUT(lerp(0.55f,scalari,scalarh));
  OUTPUT(lerp(0.55f,scalarh,foo));
  OUTPUT(lerp(0.55f,scalarh,foo.x));
  OUTPUT(lerp(0.55f,scalarh,foo.wzxy));
  OUTPUT(lerp(0.55f,scalarh,0.95));
  OUTPUT(lerp(0.55f,scalarh,0.55f));
  OUTPUT(lerp(0.55f,scalarh,0.9));
  OUTPUT(lerp(0.55f,scalarh,scalarf));
  OUTPUT(lerp(0.55f,scalarh,scalari));
  OUTPUT(lerp(0.55f,scalarh,scalarh));
  OUTPUT(lerp(0.9,foo,foo));
  OUTPUT(lerp(0.9,foo,foo.x));
  OUTPUT(lerp(0.9,foo,foo.wzxy));
  OUTPUT(lerp(0.9,foo,0.95));
  OUTPUT(lerp(0.9,foo,0.55f));
  OUTPUT(lerp(0.9,foo,0.9));
  OUTPUT(lerp(0.9,foo,scalarf));
  OUTPUT(lerp(0.9,foo,scalari));
  OUTPUT(lerp(0.9,foo,scalarh));
  OUTPUT(lerp(0.9,foo.x,foo));
  OUTPUT(lerp(0.9,foo.x,foo.x));
  OUTPUT(lerp(0.9,foo.x,foo.wzxy));
  OUTPUT(lerp(0.9,foo.x,0.95));
  OUTPUT(lerp(0.9,foo.x,0.55f));
  OUTPUT(lerp(0.9,foo.x,0.9));
  OUTPUT(lerp(0.9,foo.x,scalarf));
  OUTPUT(lerp(0.9,foo.x,scalari));
  OUTPUT(lerp(0.9,foo.x,scalarh));
  OUTPUT(lerp(0.9,foo.wzxy,foo));
  OUTPUT(lerp(0.9,foo.wzxy,foo.x));
  OUTPUT(lerp(0.9,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(0.9,foo.wzxy,0.95));
  OUTPUT(lerp(0.9,foo.wzxy,0.55f));
  OUTPUT(lerp(0.9,foo.wzxy,0.9));
  OUTPUT(lerp(0.9,foo.wzxy,scalarf));
  OUTPUT(lerp(0.9,foo.wzxy,scalari));
  OUTPUT(lerp(0.9,foo.wzxy,scalarh));
  OUTPUT(lerp(0.9,0.95,foo));
  OUTPUT(lerp(0.9,0.95,foo.x));
  OUTPUT(lerp(0.9,0.95,foo.wzxy));
  OUTPUT(lerp(0.9,0.95,0.95));
  OUTPUT(lerp(0.9,0.95,0.55f));
  OUTPUT(lerp(0.9,0.95,0.9));
  OUTPUT(lerp(0.9,0.95,scalarf));
  OUTPUT(lerp(0.9,0.95,scalari));
  OUTPUT(lerp(0.9,0.95,scalarh));
  OUTPUT(lerp(0.9,0.55f,foo));
  OUTPUT(lerp(0.9,0.55f,foo.x));
  OUTPUT(lerp(0.9,0.55f,foo.wzxy));
  OUTPUT(lerp(0.9,0.55f,0.95));
  OUTPUT(lerp(0.9,0.55f,0.55f));
  OUTPUT(lerp(0.9,0.55f,0.9));
  OUTPUT(lerp(0.9,0.55f,scalarf));
  OUTPUT(lerp(0.9,0.55f,scalari));
  OUTPUT(lerp(0.9,0.55f,scalarh));
  OUTPUT(lerp(0.9,0.9,foo));
  OUTPUT(lerp(0.9,0.9,foo.x));
  OUTPUT(lerp(0.9,0.9,foo.wzxy));
  OUTPUT(lerp(0.9,0.9,0.95));
  OUTPUT(lerp(0.9,0.9,0.55f));
  OUTPUT(lerp(0.9,0.9,0.9));
  OUTPUT(lerp(0.9,0.9,scalarf));
  OUTPUT(lerp(0.9,0.9,scalari));
  OUTPUT(lerp(0.9,0.9,scalarh));
  OUTPUT(lerp(0.9,scalarf,foo));
  OUTPUT(lerp(0.9,scalarf,foo.x));
  OUTPUT(lerp(0.9,scalarf,foo.wzxy));
  OUTPUT(lerp(0.9,scalarf,0.95));
  OUTPUT(lerp(0.9,scalarf,0.55f));
  OUTPUT(lerp(0.9,scalarf,0.9));
  OUTPUT(lerp(0.9,scalarf,scalarf));
  OUTPUT(lerp(0.9,scalarf,scalari));
  OUTPUT(lerp(0.9,scalarf,scalarh));
  OUTPUT(lerp(0.9,scalari,foo));
  OUTPUT(lerp(0.9,scalari,foo.x));
  OUTPUT(lerp(0.9,scalari,foo.wzxy));
  OUTPUT(lerp(0.9,scalari,0.95));
  OUTPUT(lerp(0.9,scalari,0.55f));
  OUTPUT(lerp(0.9,scalari,0.9));
  OUTPUT(lerp(0.9,scalari,scalarf));
  OUTPUT(lerp(0.9,scalari,scalari));
  OUTPUT(lerp(0.9,scalari,scalarh));
  OUTPUT(lerp(0.9,scalarh,foo));
  OUTPUT(lerp(0.9,scalarh,foo.x));
  OUTPUT(lerp(0.9,scalarh,foo.wzxy));
  OUTPUT(lerp(0.9,scalarh,0.95));
  OUTPUT(lerp(0.9,scalarh,0.55f));
  OUTPUT(lerp(0.9,scalarh,0.9));
  OUTPUT(lerp(0.9,scalarh,scalarf));
  OUTPUT(lerp(0.9,scalarh,scalari));
  OUTPUT(lerp(0.9,scalarh,scalarh));
  OUTPUT(lerp(scalarf,foo,foo));
  OUTPUT(lerp(scalarf,foo,foo.x));
  OUTPUT(lerp(scalarf,foo,foo.wzxy));
  OUTPUT(lerp(scalarf,foo,0.95));
  OUTPUT(lerp(scalarf,foo,0.55f));
  OUTPUT(lerp(scalarf,foo,0.9));
  OUTPUT(lerp(scalarf,foo,scalarf));
  OUTPUT(lerp(scalarf,foo,scalari));
  OUTPUT(lerp(scalarf,foo,scalarh));
  OUTPUT(lerp(scalarf,foo.x,foo));
  OUTPUT(lerp(scalarf,foo.x,foo.x));
  OUTPUT(lerp(scalarf,foo.x,foo.wzxy));
  OUTPUT(lerp(scalarf,foo.x,0.95));
  OUTPUT(lerp(scalarf,foo.x,0.55f));
  OUTPUT(lerp(scalarf,foo.x,0.9));
  OUTPUT(lerp(scalarf,foo.x,scalarf));
  OUTPUT(lerp(scalarf,foo.x,scalari));
  OUTPUT(lerp(scalarf,foo.x,scalarh));
  OUTPUT(lerp(scalarf,foo.wzxy,foo));
  OUTPUT(lerp(scalarf,foo.wzxy,foo.x));
  OUTPUT(lerp(scalarf,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(scalarf,foo.wzxy,0.95));
  OUTPUT(lerp(scalarf,foo.wzxy,0.55f));
  OUTPUT(lerp(scalarf,foo.wzxy,0.9));
  OUTPUT(lerp(scalarf,foo.wzxy,scalarf));
  OUTPUT(lerp(scalarf,foo.wzxy,scalari));
  OUTPUT(lerp(scalarf,foo.wzxy,scalarh));
  OUTPUT(lerp(scalarf,0.95,foo));
  OUTPUT(lerp(scalarf,0.95,foo.x));
  OUTPUT(lerp(scalarf,0.95,foo.wzxy));
  OUTPUT(lerp(scalarf,0.95,0.95));
  OUTPUT(lerp(scalarf,0.95,0.55f));
  OUTPUT(lerp(scalarf,0.95,0.9));
  OUTPUT(lerp(scalarf,0.95,scalarf));
  OUTPUT(lerp(scalarf,0.95,scalari));
  OUTPUT(lerp(scalarf,0.95,scalarh));
  OUTPUT(lerp(scalarf,0.55f,foo));
  OUTPUT(lerp(scalarf,0.55f,foo.x));
  OUTPUT(lerp(scalarf,0.55f,foo.wzxy));
  OUTPUT(lerp(scalarf,0.55f,0.95));
  OUTPUT(lerp(scalarf,0.55f,0.55f));
  OUTPUT(lerp(scalarf,0.55f,0.9));
  OUTPUT(lerp(scalarf,0.55f,scalarf));
  OUTPUT(lerp(scalarf,0.55f,scalari));
  OUTPUT(lerp(scalarf,0.55f,scalarh));
  OUTPUT(lerp(scalarf,0.9,foo));
  OUTPUT(lerp(scalarf,0.9,foo.x));
  OUTPUT(lerp(scalarf,0.9,foo.wzxy));
  OUTPUT(lerp(scalarf,0.9,0.95));
  OUTPUT(lerp(scalarf,0.9,0.55f));
  OUTPUT(lerp(scalarf,0.9,0.9));
  OUTPUT(lerp(scalarf,0.9,scalarf));
  OUTPUT(lerp(scalarf,0.9,scalari));
  OUTPUT(lerp(scalarf,0.9,scalarh));
  OUTPUT(lerp(scalarf,scalarf,foo));
  OUTPUT(lerp(scalarf,scalarf,foo.x));
  OUTPUT(lerp(scalarf,scalarf,foo.wzxy));
  OUTPUT(lerp(scalarf,scalarf,0.95));
  OUTPUT(lerp(scalarf,scalarf,0.55f));
  OUTPUT(lerp(scalarf,scalarf,0.9));
  OUTPUT(lerp(scalarf,scalarf,scalarf));
  OUTPUT(lerp(scalarf,scalarf,scalari));
  OUTPUT(lerp(scalarf,scalarf,scalarh));
  OUTPUT(lerp(scalarf,scalari,foo));
  OUTPUT(lerp(scalarf,scalari,foo.x));
  OUTPUT(lerp(scalarf,scalari,foo.wzxy));
  OUTPUT(lerp(scalarf,scalari,0.95));
  OUTPUT(lerp(scalarf,scalari,0.55f));
  OUTPUT(lerp(scalarf,scalari,0.9));
  OUTPUT(lerp(scalarf,scalari,scalarf));
  OUTPUT(lerp(scalarf,scalari,scalari));
  OUTPUT(lerp(scalarf,scalari,scalarh));
  OUTPUT(lerp(scalarf,scalarh,foo));
  OUTPUT(lerp(scalarf,scalarh,foo.x));
  OUTPUT(lerp(scalarf,scalarh,foo.wzxy));
  OUTPUT(lerp(scalarf,scalarh,0.95));
  OUTPUT(lerp(scalarf,scalarh,0.55f));
  OUTPUT(lerp(scalarf,scalarh,0.9));
  OUTPUT(lerp(scalarf,scalarh,scalarf));
  OUTPUT(lerp(scalarf,scalarh,scalari));
  OUTPUT(lerp(scalarf,scalarh,scalarh));
  OUTPUT(lerp(scalari,foo,foo));
  OUTPUT(lerp(scalari,foo,foo.x));
  OUTPUT(lerp(scalari,foo,foo.wzxy));
  OUTPUT(lerp(scalari,foo,0.95));
  OUTPUT(lerp(scalari,foo,0.55f));
  OUTPUT(lerp(scalari,foo,0.9));
  OUTPUT(lerp(scalari,foo,scalarf));
  OUTPUT(lerp(scalari,foo,scalari));
  OUTPUT(lerp(scalari,foo,scalarh));
  OUTPUT(lerp(scalari,foo.x,foo));
  OUTPUT(lerp(scalari,foo.x,foo.x));
  OUTPUT(lerp(scalari,foo.x,foo.wzxy));
  OUTPUT(lerp(scalari,foo.x,0.95));
  OUTPUT(lerp(scalari,foo.x,0.55f));
  OUTPUT(lerp(scalari,foo.x,0.9));
  OUTPUT(lerp(scalari,foo.x,scalarf));
  OUTPUT(lerp(scalari,foo.x,scalari));
  OUTPUT(lerp(scalari,foo.x,scalarh));
  OUTPUT(lerp(scalari,foo.wzxy,foo));
  OUTPUT(lerp(scalari,foo.wzxy,foo.x));
  OUTPUT(lerp(scalari,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(scalari,foo.wzxy,0.95));
  OUTPUT(lerp(scalari,foo.wzxy,0.55f));
  OUTPUT(lerp(scalari,foo.wzxy,0.9));
  OUTPUT(lerp(scalari,foo.wzxy,scalarf));
  OUTPUT(lerp(scalari,foo.wzxy,scalari));
  OUTPUT(lerp(scalari,foo.wzxy,scalarh));
  OUTPUT(lerp(scalari,0.95,foo));
  OUTPUT(lerp(scalari,0.95,foo.x));
  OUTPUT(lerp(scalari,0.95,foo.wzxy));
  OUTPUT(lerp(scalari,0.95,0.95));
  OUTPUT(lerp(scalari,0.95,0.55f));
  OUTPUT(lerp(scalari,0.95,0.9));
  OUTPUT(lerp(scalari,0.95,scalarf));
  OUTPUT(lerp(scalari,0.95,scalari));
  OUTPUT(lerp(scalari,0.95,scalarh));
  OUTPUT(lerp(scalari,0.55f,foo));
  OUTPUT(lerp(scalari,0.55f,foo.x));
  OUTPUT(lerp(scalari,0.55f,foo.wzxy));
  OUTPUT(lerp(scalari,0.55f,0.95));
  OUTPUT(lerp(scalari,0.55f,0.55f));
  OUTPUT(lerp(scalari,0.55f,0.9));
  OUTPUT(lerp(scalari,0.55f,scalarf));
  OUTPUT(lerp(scalari,0.55f,scalari));
  OUTPUT(lerp(scalari,0.55f,scalarh));
  OUTPUT(lerp(scalari,0.9,foo));
  OUTPUT(lerp(scalari,0.9,foo.x));
  OUTPUT(lerp(scalari,0.9,foo.wzxy));
  OUTPUT(lerp(scalari,0.9,0.95));
  OUTPUT(lerp(scalari,0.9,0.55f));
  OUTPUT(lerp(scalari,0.9,0.9));
  OUTPUT(lerp(scalari,0.9,scalarf));
  OUTPUT(lerp(scalari,0.9,scalari));
  OUTPUT(lerp(scalari,0.9,scalarh));
  OUTPUT(lerp(scalari,scalarf,foo));
  OUTPUT(lerp(scalari,scalarf,foo.x));
  OUTPUT(lerp(scalari,scalarf,foo.wzxy));
  OUTPUT(lerp(scalari,scalarf,0.95));
  OUTPUT(lerp(scalari,scalarf,0.55f));
  OUTPUT(lerp(scalari,scalarf,0.9));
  OUTPUT(lerp(scalari,scalarf,scalarf));
  OUTPUT(lerp(scalari,scalarf,scalari));
  OUTPUT(lerp(scalari,scalarf,scalarh));
  OUTPUT(lerp(scalari,scalari,foo));
  OUTPUT(lerp(scalari,scalari,foo.x));
  OUTPUT(lerp(scalari,scalari,foo.wzxy));
  OUTPUT(lerp(scalari,scalari,0.95));
  OUTPUT(lerp(scalari,scalari,0.55f));
  OUTPUT(lerp(scalari,scalari,0.9));
  OUTPUT(lerp(scalari,scalari,scalarf));
  OUTPUT(lerp(scalari,scalari,scalari));
  OUTPUT(lerp(scalari,scalari,scalarh));
  OUTPUT(lerp(scalari,scalarh,foo));
  OUTPUT(lerp(scalari,scalarh,foo.x));
  OUTPUT(lerp(scalari,scalarh,foo.wzxy));
  OUTPUT(lerp(scalari,scalarh,0.95));
  OUTPUT(lerp(scalari,scalarh,0.55f));
  OUTPUT(lerp(scalari,scalarh,0.9));
  OUTPUT(lerp(scalari,scalarh,scalarf));
  OUTPUT(lerp(scalari,scalarh,scalari));
  OUTPUT(lerp(scalari,scalarh,scalarh));
  OUTPUT(lerp(scalarh,foo,foo));
  OUTPUT(lerp(scalarh,foo,foo.x));
  OUTPUT(lerp(scalarh,foo,foo.wzxy));
  OUTPUT(lerp(scalarh,foo,0.95));
  OUTPUT(lerp(scalarh,foo,0.55f));
  OUTPUT(lerp(scalarh,foo,0.9));
  OUTPUT(lerp(scalarh,foo,scalarf));
  OUTPUT(lerp(scalarh,foo,scalari));
  OUTPUT(lerp(scalarh,foo,scalarh));
  OUTPUT(lerp(scalarh,foo.x,foo));
  OUTPUT(lerp(scalarh,foo.x,foo.x));
  OUTPUT(lerp(scalarh,foo.x,foo.wzxy));
  OUTPUT(lerp(scalarh,foo.x,0.95));
  OUTPUT(lerp(scalarh,foo.x,0.55f));
  OUTPUT(lerp(scalarh,foo.x,0.9));
  OUTPUT(lerp(scalarh,foo.x,scalarf));
  OUTPUT(lerp(scalarh,foo.x,scalari));
  OUTPUT(lerp(scalarh,foo.x,scalarh));
  OUTPUT(lerp(scalarh,foo.wzxy,foo));
  OUTPUT(lerp(scalarh,foo.wzxy,foo.x));
  OUTPUT(lerp(scalarh,foo.wzxy,foo.wzxy));
  OUTPUT(lerp(scalarh,foo.wzxy,0.95));
  OUTPUT(lerp(scalarh,foo.wzxy,0.55f));
  OUTPUT(lerp(scalarh,foo.wzxy,0.9));
  OUTPUT(lerp(scalarh,foo.wzxy,scalarf));
  OUTPUT(lerp(scalarh,foo.wzxy,scalari));
  lerp(foo,foo,foo);
  lerp(foo,foo.wzxy,foo);
  lerp(scalarh,foo.wzxy,foo);
  lerp(scalarh,foo.wzxy,scalarh);
  OUTPUT(lerp(scalarh,foo.wzxy,scalarh));
  OUTPUT(lerp(scalarh,0.95,foo));
  OUTPUT(lerp(scalarh,0.95,foo.x));
  OUTPUT(lerp(scalarh,0.95,foo.wzxy));
  OUTPUT(lerp(scalarh,0.95,0.95));
  OUTPUT(lerp(scalarh,0.95,0.55f));
  OUTPUT(lerp(scalarh,0.95,0.9));
  OUTPUT(lerp(scalarh,0.95,scalarf));
  OUTPUT(lerp(scalarh,0.95,scalari));
  OUTPUT(lerp(scalarh,0.95,scalarh));
  OUTPUT(lerp(scalarh,0.55f,foo));
  OUTPUT(lerp(scalarh,0.55f,foo.x));
  OUTPUT(lerp(scalarh,0.55f,foo.wzxy));
  OUTPUT(lerp(scalarh,0.55f,0.95));
  OUTPUT(lerp(scalarh,0.55f,0.55f));
  OUTPUT(lerp(scalarh,0.55f,0.9));
  OUTPUT(lerp(scalarh,0.55f,scalarf));
  OUTPUT(lerp(scalarh,0.55f,scalari));
  OUTPUT(lerp(scalarh,0.55f,scalarh));
  OUTPUT(lerp(scalarh,0.9,foo));
  OUTPUT(lerp(scalarh,0.9,foo.x));
  OUTPUT(lerp(scalarh,0.9,foo.wzxy));
  OUTPUT(lerp(scalarh,0.9,0.95));
  OUTPUT(lerp(scalarh,0.9,0.55f));
  OUTPUT(lerp(scalarh,0.9,0.9));
  OUTPUT(lerp(scalarh,0.9,scalarf));
  OUTPUT(lerp(scalarh,0.9,scalari));
  OUTPUT(lerp(scalarh,0.9,scalarh));
  OUTPUT(lerp(scalarh,scalarf,foo));
  OUTPUT(lerp(scalarh,scalarf,foo.x));
  OUTPUT(lerp(scalarh,scalarf,foo.wzxy));
  OUTPUT(lerp(scalarh,scalarf,0.95));
  OUTPUT(lerp(scalarh,scalarf,0.55f));
  OUTPUT(lerp(scalarh,scalarf,0.9));
  OUTPUT(lerp(scalarh,scalarf,scalarf));
  OUTPUT(lerp(scalarh,scalarf,scalari));
  OUTPUT(lerp(scalarh,scalarf,scalarh));
  OUTPUT(lerp(scalarh,scalari,foo));
  OUTPUT(lerp(scalarh,scalari,foo.x));
  OUTPUT(lerp(scalarh,scalari,foo.wzxy));
  OUTPUT(lerp(scalarh,scalari,0.95));
  OUTPUT(lerp(scalarh,scalari,0.55f));
  OUTPUT(lerp(scalarh,scalari,0.9));
  OUTPUT(lerp(scalarh,scalari,scalarf));
  OUTPUT(lerp(scalarh,scalari,scalari));
  OUTPUT(lerp(scalarh,scalari,scalarh));
  OUTPUT(lerp(scalarh,scalarh,foo));
  OUTPUT(lerp(scalarh,scalarh,foo.x));
  OUTPUT(lerp(scalarh,scalarh,foo.wzxy));
  OUTPUT(lerp(scalarh,scalarh,0.95));
  OUTPUT(lerp(scalarh,scalarh,0.55f));
  OUTPUT(lerp(scalarh,scalarh,0.9));
  OUTPUT(lerp(scalarh,scalarh,scalarf));
  OUTPUT(lerp(scalarh,scalarh,scalari));
  OUTPUT(lerp(scalarh,scalarh,scalarh));
  OUTPUT(lerp(float4(-1,2,5.4,10),1.1,7));

  OUTPUT(lerp(float4(1,2,3,4), float4(2,3,4,0.95f), 0.5));
#endif
}
