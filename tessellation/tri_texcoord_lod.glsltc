
// tri_texcoord_lod.glsltc

// DESCRIPTION:  GLSL tessellation control shader passing
// through 3 control points to form a triangle patch with the
// outer level-of-detail specified by the (s,t,p,q) of texture coordinate
// set 0 and the inner level-of-detail specified by (s,t) of texture
// coordinate set 1.

// To off-line compile this code to assembly with Cg 3.0, use:
// cgc -profile gp5tcp -oglsl -po InputPatchSize=3 -po PATCH_3 tri_texcoord_lod.glsltc

#version 400 compatibility
layout(vertices=3) out;  // linear triangle patch

#define TID gl_InvocationID  // thread ID

in vec3 eye_space_pos[];

out vec3 eye_space_pos2[];

void main(void)
{
    eye_space_pos2[TID] = eye_space_pos[TID];
    
    // The following statements only need to execute on thread 0 (TID == 0)...
    // But it is more efficient to simply have all threads execute them.
    
    // Outer LOD
    gl_TessLevelOuter[0] = gl_in[0].gl_TexCoord[0].s;
    gl_TessLevelOuter[1] = gl_in[0].gl_TexCoord[0].t;
    gl_TessLevelOuter[2] = gl_in[0].gl_TexCoord[0].p;
    // Inner LOD
    gl_TessLevelInner[0] = gl_in[0].gl_TexCoord[1].s;
}